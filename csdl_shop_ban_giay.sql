---TABLE
---SYSTEM
CREATE TABLE KHACHHANG
(
  MAKH VARCHAR2(30) PRIMARY KEY,
  TENKH VARCHAR2(255),  
  DIACHI VARCHAR2(255),
  SDT VARCHAR2(255),
  TONGCHITIEU real DEFAULT 0.0
);
/
CREATE TABLE SANPHAM(
  MASP VARCHAR2(15) PRIMARY KEY ,
  TENSP NVARCHAR2(50),
  TH VARCHAR2(30),  
  SIZEGIAY INT ,  
  CHATLIEU NVARCHAR2(20),   
  GIA REAL DEFAULT 0.0,
  SLGTON INT DEFAULT 0,
    
  CONSTRAINT CHK_SIZE CHECK (SIZEGIAY>30 AND SIZEGIAY<50)
);
/
CREATE TABLE HOADON
(
  MAHD  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  MAKH VARCHAR2(30) NOT NULL,
  NGAYLAP DATE NOT NULL,  
  TONGTIEN REAL DEFAULT 0.0,
  
  CONSTRAINT FK_HD_KH FOREIGN KEY(MAKH) references KHACHHANG(MAKH)
);
/
CREATE TABLE CTHD
(
	MAHD NUMBER,
	MASP VARCHAR2(15),
	SLG INT DEFAULT 0,

    CONSTRAINT PK_CTHD PRIMARY KEY(MAHD,MASP),
	CONSTRAINT FK_CTHD_HD foreign key(MAHD) references HOADON(MAHD),
	CONSTRAINT FK_CTHD_SP FOREIGN KEY(MASP) REFERENCES SANPHAM(MASP)
);
/
---THU TUC
---SYSTEM
---============================================================================================================================
---HAM SHITFCHAR
CREATE OR REPLACE FUNCTION F_SHIFT_CHAR(C CHAR, K NUMBER)
RETURN CHAR
AS
    T NUMBER(2);
BEGIN
    T:=ASCII('A');
    IF REGEXP_LIKE(C, '[a-z]|[A-Z]') THEN
        RETURN (CHR(T+(ASCII(C)-T+K)MOD 26));
    ELSE 
        RETURN NULL;
    END IF;
END;
/
---MA HOA MAT KHAU USER - CEASAR 
CREATE OR REPLACE FUNCTION F_MA_HOA_MK(IN_MK VARCHAR, KEYMK INT)
RETURN VARCHAR
AS
    I NUMBER(2);
    LEN NUMBER(5);
    ENC_MK VARCHAR(255):='';
BEGIN
    ENC_MK:=UPPER(ENC_MK);
    LEN:=LENGTH(IN_MK);
    FOR I IN 1..LEN LOOP
        ENC_MK:=ENC_MK||F_SHIFT_CHAR(SUBSTR(IN_MK,I,1), KEYMK);
    END LOOP;
RETURN ENC_MK;
END;
/
---MA HOA/ GIAI MA BANG DES
CREATE OR REPLACE PACKAGE PKG_DES
AS
    FUNCTION F_ENC_DATA(PLAIN_TEXT VARCHAR2) RETURN RAW;
    FUNCTION F_DEC_DATA(ENCRYPTED_TEXT VARCHAR2) RETURN VARCHAR2;
END PKG_DES;
/
CREATE OR REPLACE PACKAGE BODY PKG_DES
AS
    ENC_KEY RAW(32):=UTL_RAW.CAST_TO_RAW('NGUYENQUANGTUAN');
    ENC_TYPE PLS_INTEGER:= DBMS_CRYPTO.ENCRYPT_DES
                            + DBMS_CRYPTO.CHAIN_CBC
                            + DBMS_CRYPTO.PAD_PKCS5;
    --------------------------------------------------------
    FUNCTION F_ENC_DATA(PLAIN_TEXT VARCHAR2) 
    RETURN RAW
    IS
        ENC_RAW RAW(2000);
        ENC_TEXT VARCHAR2(255);
    BEGIN
        ENC_RAW:=DBMS_CRYPTO.ENCRYPT(
          SRC=>UTL_RAW.CAST_TO_RAW(PLAIN_TEXT),
          TYP=>ENC_TYPE,
          KEY=>ENC_KEY
        );
        
       RETURN ENC_RAW;
    END F_ENC_DATA;
    -----------------------------------------------------------
    FUNCTION F_DEC_DATA(ENCRYPTED_TEXT VARCHAR2) 
    RETURN VARCHAR2
    IS        
        DEC_RAW RAW(2000);
        DEC_TEXT VARCHAR2(255);
    BEGIN        
        DEC_RAW:=DBMS_CRYPTO.DECRYPT(
          SRC=>UTL_RAW.CAST_TO_RAW(ENCRYPTED_TEXT),
          TYP=>ENC_TYPE,
          KEY=>ENC_KEY
        );
        DEC_TEXT:=UTL_RAW.CAST_TO_VARCHAR2(DEC_RAW);
    RETURN DEC_TEXT;
    END F_DEC_DATA;
END PKG_DES;
/
---============================================================================================================================
---KHACHHANG 
create or replace procedure p_xem_kh(cur_kh OUT sys_refcursor)
as
begin
    open cur_kh for
    select makh, pkg_des.f_dec_data(tenkh) as tenkh, pkg_des.f_dec_data(diachi) as diachi, pkg_des.f_dec_data(sdt) as sdt, tongchitieu
    from system.khachhang;
end;
/
---THEM KHACHHANG
CREATE OR REPLACE PROCEDURE P_THEM_KH(
    IN_MAKH IN VARCHAR2,
    IN_TENKH IN VARCHAR2,
    IN_DIACHI IN VARCHAR2,
    IN_SDT IN VARCHAR
)
IS
    ENC_TENKH VARCHAR2(255);
    ENC_DIACHI VARCHAR2(255);
    ENC_SDT VARCHAR2(255);
BEGIN
    ENC_TENKH:= PKG_DES.F_ENC_DATA(IN_TENKH);
    ENC_DIACHI:= PKG_DES.F_ENC_DATA(IN_DIACHI);
    ENC_SDT:= PKG_DES.F_ENC_DATA(IN_SDT);
    
    INSERT INTO SYSTEM.KHACHHANG(MAKH, TENKH, DIACHI, SDT)
    VALUES(IN_MAKH, ENC_TENKH, ENC_DIACHI, ENC_SDT);
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;        
END;
/
---SUA KHACHHANG
CREATE OR REPLACE PROCEDURE P_SUA_KH(
    IN_MAKH IN VARCHAR2,
    IN_TENKH IN NVARCHAR2,
    IN_DIACHI IN NVARCHAR2,
    IN_SDT IN VARCHAR
)
IS
    ENC_TENKH VARCHAR2(255);
    ENC_DIACHI VARCHAR2(255);
    ENC_SDT VARCHAR2(255);
BEGIN
    ENC_TENKH:= PKG_DES.F_ENC_DATA(IN_TENKH);
    ENC_DIACHI:= PKG_DES.F_ENC_DATA(IN_DIACHI);
    ENC_SDT:= PKG_DES.F_ENC_DATA(IN_SDT);
    
    UPDATE SYSTEM.KHACHHANG
    SET TENKH=ENC_TENKH, DIACHI=ENC_DIACHI, SDT=ENC_SDT
    WHERE MAKH=IN_MAKH;
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
END;
/
---XOA KHACH HANG
CREATE OR REPLACE PROCEDURE P_XOA_KH(IN_MAKH IN VARCHAR2)
IS
BEGIN
    DELETE FROM SYSTEM.KHACHHANG
    WHERE MAKH=IN_MAKH;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
END;
/
---=============================================================================================================================
create or replace procedure p_xem_sp(cur_kh OUT sys_refcursor)
as
begin
    open cur_kh for
    select masp, tensp, th, sizegiay, chatlieu, gia, slgton
    from system.sanpham;
end;
---THEM SAN PHAM
CREATE OR REPLACE PROCEDURE P_THEM_SP(
    IN_MASP IN VARCHAR,
    IN_TENSP IN NVARCHAR2,
    IN_TH IN VARCHAR,
    IN_SIZESP IN INT,
    IN_CHATLIEU IN VARCHAR,
    IN_GIA IN REAL,
    IN_SLGTON IN INT
)
AS
BEGIN
    INSERT INTO SYSTEM.SANPHAM(MASP, TENSP, TH, SIZEGIAY, CHATLIEU, GIA, SLGTON)
    VALUES(IN_MASP, IN_TENSP, IN_TH, IN_SIZESP, IN_CHATLIEU, IN_GIA, IN_SLGTON);
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;        
END;
/
---SUA SAN PHAM
CREATE OR REPLACE PROCEDURE P_SUA_SP(
    IN_MASP IN VARCHAR,
    IN_TENSP IN NVARCHAR2,
    IN_TH IN VARCHAR,
    IN_SIZEGIAY IN INT,
    IN_CHATLIEU IN VARCHAR,
    IN_GIA IN REAL,
    IN_SLGTON IN INT
)
AS
BEGIN
    UPDATE SYSTEM.SANPHAM
    SET TENSP=IN_TENSP, TH=IN_TH, SIZEGIAY=IN_SIZEGIAY, CHATLIEU=IN_CHATLIEU, GIA=IN_GIA, SLGTON=IN_SLGTON
    WHERE MASP=IN_MASP;
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;        
END;
/    
---XOA SAN PHAM
CREATE OR REPLACE PROCEDURE P_XOA_SP(IN_MASP IN VARCHAR)
IS
BEGIN
     DELETE FROM SYSTEM.SANPHAM
     WHERE MASP=IN_MASP;
     COMMIT;
     EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK; 
END;
/
---=============================================================================================================================
---THEM HOA DON
CREATE OR REPLACE PROCEDURE P_THEM_HD(
    IN_MAKH IN VARCHAR,
    IN_NGAYLAP IN DATE
)
IS
BEGIN
    INSERT INTO SYSTEM.HOADON(MAKH,NGAYLAP)
    VALUES(IN_MAKH, TO_DATE(IN_NGAYLAP,'DD/MM/YYYY'));
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
END;
/
---SUA HOA DON
CREATE OR REPLACE PROCEDURE P_SUA_HD(
    IN_MAHD IN NUMBER,
    IN_MAKH IN VARCHAR,
    IN_NGAYLAP IN DATE,
    IN_TONGTIEN IN REAL
)
IS
BEGIN    
    UPDATE SYSTEM.HOADON
    SET MAKH=IN_MAKH, NGAYLAP= TO_DATE(IN_NGAYLAP,'DD/MM/YYYY')
    WHERE MAHD=IN_MAHD;
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
END;
/
---XOA HOA DON
CREATE OR REPLACE PROCEDURE P_XOA_HD(IN_MAHD IN NUMBER)
IS
    COUNTHD INT;
BEGIN    
    SELECT COUNT(*) INTO COUNTHD FROM SYSTEM.CTHD WHERE MAHD=IN_MAHD;
    IF COUNTHD>0 THEN
        DELETE FROM SYSTEM.CTHD WHERE MAHD=IN_MAHD;
        DELETE FROM SYSTEM.HOADON WHERE MAHD=IN_MAHD;
    ELSE
        DELETE FROM SYSTEM.HOADON WHERE MAHD=IN_MAHD;
    END IF;
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
END;
/
---=============================================================================================================================
---xem cthd
create or replace procedure p_xem_cthd(
    in_mahd IN number,
    cur_cthd OUT sys_refcursor
)
is
begin
    open cur_cthd for
    select c.mahd, c.masp, s.tensp, s.gia, c.slg
    from system.cthd c, system.sanpham s
    where c.masp=s.masp and c.mahd=in_mahd;
end;
---THEM CTHD
CREATE OR REPLACE PROCEDURE P_THEM_CTHD(
    IN_MAHD IN NUMBER,
    IN_MASP IN VARCHAR,
    IN_SLG IN INT 
)
AS
    V_GIA REAL;
BEGIN    
    INSERT INTO SYSTEM.CTHD(MAHD, MASP, SLG)
    VALUES(IN_MAHD, IN_MASP, IN_SLG);
    
    SELECT GIA INTO V_GIA FROM SANPHAM WHERE MASP=IN_MASP;
    UPDATE SYSTEM.SANPHAM SET SLGTON=SLGTON-IN_SLG WHERE MASP=IN_MASP;
    UPDATE SYSTEM.HOADON SET TONGTIEN=TONGTIEN+(V_GIA*IN_SLG) WHERE MAHD=IN_MAHD;
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
END;
/

---XOA CTHD
CREATE OR REPLACE PROCEDURE P_XOA_CTHD(
    IN_MAHD IN NUMBER,
    IN_MASP IN VARCHAR,
    IN_SLG IN INT)
AS
    V_GIA REAL;
BEGIN
    DELETE FROM SYSTEM.CTHD
    WHERE MAHD=IN_MAHD AND MASP=IN_MASP AND SLG=IN_SLG;
    
    SELECT GIA INTO V_GIA FROM SANPHAM WHERE MASP=IN_MASP;
    UPDATE SYSTEM.SANPHAM SET SLGTON=SLGTON+IN_SLG WHERE MASP=IN_MASP;
    UPDATE SYSTEM.HOADON SET TONGTIEN=TONGTIEN-(V_GIA*IN_SLG) WHERE MAHD=IN_MAHD;
    COMMIT;
    EXCEPTION
        WHEN OTHERS THEN
        ROLLBACK;
END;
/
---=============================================================================================================================
---tao profile khachhang
CREATE PROFILE PRF_KHACHHANG LIMIT
CONNECT_TIME unlimited
IDLE_TIME DEFAULT
SESSIONS_PER_USER 1
FAILED_LOGIN_ATTEMPTS 5
PASSWORD_LOCK_TIME 30;
/
---TAO MOI 1 USER TU KHACHHANG
CREATE OR REPLACE PROCEDURE P_TAO_USER_KH(IN_MAKH IN VARCHAR2, IN_MK IN VARCHAR2, IN_KEY INT)
AS
    ENC_MK VARCHAR2(255);
BEGIN
    ENC_MK:= F_MA_HOA_MK(IN_MK, IN_KEY);
    EXECUTE IMMEDIATE 'CREATE USER '||IN_MAKH||' IDENTIFIED BY '||ENC_MK||' PROFILE PRF_KHACHHANG ACCOUNT UNLOCK';
    EXECUTE IMMEDIATE 'GRANT R_KHACHHANG TO '||IN_MAKH;
    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20001,'TAO USER KHACHHANG THAT BAI!');
END;
/
---XOA 1 USER
CREATE OR REPLACE PROCEDURE P_XOA_USER(IN_USERNAME IN VARCHAR)
AS
BEGIN
    EXECUTE IMMEDIATE 'DROP USER '||IN_USERNAME;
    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20022,'XOA USER THAT BAI!');
END;
/
---doi mat khau user
create or replace procedure P_DOI_MK(
    IN_USERNAME IN VARCHAR2,
    IN_MK IN VARCHAR2,
    IN_KEY IN INT 
)
AS
    ENC_MK VARCHAR2(255);
BEGIN
    ENC_MK:= F_MA_HOA_MK(IN_MK, IN_KEY);
    EXECUTE IMMEDIATE 'ALTER USER '||IN_USERNAME||' IDENTIFIED BY '||ENC_MK;   
END;
/
---xem danh sach user
CREATE OR REPLACE PROCEDURE P_XEM_USER(
    CUR_USER OUT SYS_REFCURSOR
)
IS    
BEGIN
    open CUR_USER for
    select USERNAME, ACCOUNT_STATUS, PROFILE, LAST_LOGIN    
    from dba_users
    where profile='PRF_KHACHHANG' or profile='PRF_NHANVIEN';    
END;
---============================================================================================================================
---TAO PROFILE NHAN VIEN
CREATE PROFILE PRF_NHANVIEN LIMIT
CONNECT_TIME UNLIMITED
IDLE_TIME UNLIMITED
SESSIONS_PER_USER 1
FAILED_LOGIN_ATTEMPTS 5
PASSWORD_LOCK_TIME 30;
---TAO NHAN VIEN
CREATE OR REPLACE PROCEDURE P_TAO_USER_NV(IN_MANV IN VARCHAR, IN_MK IN VARCHAR, IN_KEY INT)
AS
    ENC_MK VARCHAR(255);
BEGIN
    ENC_MK:= F_MA_HOA_MK(IN_MK, IN_KEY);
    EXECUTE IMMEDIATE 'CREATE USER '||IN_MANV||' IDENTIFIED BY '||ENC_MK||' PROFILE PRF_NHANVIEN ACCOUNT UNLOCK';
    EXECUTE IMMEDIATE 'GRANT R_NHANVIEN TO '||IN_MANV;
    EXCEPTION 
        WHEN OTHERS THEN
            ROLLBACK;
            RAISE_APPLICATION_ERROR(-20021,'TAO USER NHANVIEN THAT BAI!');
END;
/

/
---THU TUC CAP/THUHOI QUYEN TREN BANG
---CAP QUYEN
CREATE OR REPLACE PROCEDURE P_CAP_QUYEN_TREN_BANG(
       IN_QUYEN VARCHAR,
       IN_BANG VARCHAR,
       IN_USER VARCHAR
)
AS
BEGIN
    EXECUTE IMMEDIATE 'GRANT '||IN_QUYEN||' ON SYSTEM.'||IN_BANG||' TO '||IN_USER;
    EXCEPTION 
    WHEN OTHERS THEN
        RAISE_APPLICATION_ERROR(-20010,'CAP QUYEN THAT BAI!');
END;
/
---THU HOI QUYEN
CREATE OR REPLACE PROCEDURE P_THU_QUYEN_TREN_BANG(
       IN_QUYEN VARCHAR,
       IN_BANG VARCHAR,
       IN_USER VARCHAR
)
AS
BEGIN
    EXECUTE IMMEDIATE 'REVOKE '||IN_QUYEN||' ON SYSTEM.'||IN_BANG||' FROM '||IN_USER;
    EXCEPTION 
        WHEN OTHERS THEN            
            RAISE_APPLICATION_ERROR(-20011,'THU HOI QUYEN THAT BAI!');
END;
/
---xem quyen cua user
create or replace procedure p_xem_quyen_user(
    cur_priv OUT sys_refcursor,
    in_user varchar2
)
as 
begin
    open cur_priv for
    select owner, table_name, grantor, privilege
    from sys.dba_tab_privs
    where grantee=in_user;
end;
/
desc dba_tab_privs
---grant select on sys.dba_tab_privs to system

---========================================================================================
--- tao role cho nhan vien
create role R_NHANVIEN;
---drop role R_NHANVIEN;
---xem
grant execute on system.p_xem_kh to r_nhanvien;
grant execute on system.p_xem_sp to r_nhanvien;
grant execute on system.p_xem_hd to r_nhanvien;
grant execute on system.p_xem_cthd to r_nhanvien;
---them
grant execute on system.p_them_kh to r_nhanvien;
grant execute on system.p_them_hd to r_nhanvien;
grant execute on system.p_them_cthd to r_nhanvien;
---sua
grant execute on system.p_sua_kh to r_nhanvien;
grant execute on system.p_sua_hd to r_nhanvien;
---xoa
grant execute on system.p_xoa_hd to r_nhanvien;
grant execute on system.p_xoa_cthd to r_nhanvien;
---
grant create user to r_nhanvien;
grant drop user to r_nhanvien;
---
GRANT EXECUTE ON SYSTEM.P_DOI_MK TO R_NHANVIEN;
---revoke execute on system.pkg_des from r_nhanvien
select * from dba_tab_privs where grantee='R_NHANVIEN';
select GRANTED_ROLE from DBA_ROLE_PRIVS where GRANTEE='NV01';
---select * from dba_role_privs where grantee='SYSTEM';
---select grantee from dba_role_privs where granted_role='R_NHANVIEN';
---select * from dba_sys_privs;
---select * from dba_tab_privs;
---select * from dba_roles;
---========================================================================================
--- tao role cho khach hang
create role R_KHACHHANG;
---drop role R_KHACHHANG;
grant create session to R_KHACHHANG;
grant execute on SYSTEM.F_SHIFT_CHAR to R_KHACHHANG;
grant execute on SYSTEM.F_MA_HOA_MK to R_KHACHHANG;
grant execute on SYSTEM.F_XEM_KH to R_KHACHHANG; 
grant execute on SYSTEM.P_DOI_MK to R_KHACHHANG;
grant execute on SYSTEM.P_XEM_HD to R_KHACHHANG;
grant execute on SYSTEM.P_XEM_KH to R_KHACHHANG;
grant execute on SYSTEM.P_XEM_CTHD to R_KHACHHANG;
grant execute on system.p_xem_sp to r_khachhang;
GRANT EXECUTE ON SYSTEM.P_DOI_MK TO R_KHACHHANG;
---select * from dba_tab_privs where grantee='R_KHACHHANG';
---select * from dba_tab_privs where grantee='R_NHANVIEN';
---========================================================================================
---chinh sach cho KHACHHANG
---------------------------
create or replace function f_kh_only(
    fschema IN varchar2,
    fobject IN varchar2
)
return varchar2
is
begin
    return 'MAKH=USER';
end;
/
begin
    dbms_rls.add_policy(
        object_schema=>'SYSTEM',
        object_name=>'KHACHHANG',
        policy_name=>'pol_kh_only',
        policy_function=>'f_kh_only'      
    );
end;
/
begin
    dbms_rls.drop_policy(
        object_schema=>'SYSTEM',
        object_name=>'KHACHHANG',
        policy_name=>'pol_kh_only' 
    );
end;
--------------------------------------
create or replace function f_hd_only(
    fschema IN varchar2,
    fobject IN varchar2
)
return varchar2
is
begin
    return 'MAKH=USER';
end;
/
begin
    dbms_rls.add_policy(
        object_schema=>'SYSTEM',
        object_name=>'HOADON',
        policy_name=>'pol_hd_only',
        policy_function=>'f_hd_only'      
    );
end;
/
begin
    dbms_rls.drop_policy(
        object_schema=>'SYSTEM',
        object_name=>'HOADON',
        policy_name=>'pol_hd_only'              
    );
end;
---========================================================================================
---DU LIEU
---KHACHHANG
select * from khachhang;
EXECUTE P_THEM_KH('NVA', 'NGUYEN VAN A', 'QUAN 12', '0909001002');
EXECUTE P_TAO_USER_KH('NVA','NVA',3);
EXECUTE P_THEM_KH('NVB', 'NGUYEN VAN B', 'QUAN 12', '0909001002');
EXECUTE P_TAO_USER_KH('NVB','NVB',3);
EXECUTE P_THEM_KH('NVC', 'NGUYEN VAN C', 'QUAN 12', '0909001002');
EXECUTE P_TAO_USER_KH('NVC','NVC',3);
EXECUTE P_THEM_KH('NVD', 'NGUYEN VAN D', 'QUAN 12', '0909001002');
EXECUTE P_TAO_USER_KH('NVD','NVD',3);
---
EXECUTE P_XOA_KH('NQT');
---SANPHAM
SELECT * FROM SANPHAM;
EXECUTE P_THEM_SP('SP1',N'ADIDAS NDM R1 40','ADIDAS',40,N'V?I', 2800,3);
EXECUTE P_THEM_SP('SP2',N'ADIDAS NDM R2 38','ADIDAS', 38, N'V?I', 2100, 5);
EXECUTE P_THEM_SP('SP3',N'ADIDAS NDM R2 42', 'ADIDAS', 42, N'V?I', 2200, 5);
EXECUTE P_THEM_SP('SP4',N'NIKE AIR JORDAN 1 43', 'NIKE', 43, N'V?I', 2550, 6);
EXECUTE P_THEM_SP('SP5',N'NIKE PEGASUS 40','NIKE', 40, N'V?I', 2350, 5);
EXECUTE P_THEM_SP('SP6',N'BITIS HUNTER X 42', 'BITIS', 42, N'V?I', 1890, 10);
EXECUTE P_THEM_SP('SP7',N'VANS OLD SKOOL 41', 'VANS', 41, N'V?I', 2250, 3);
EXECUTE P_THEM_SP('SP8',N'CONVERSE CHUCK ALLSTAR 39', 'CONVERSE', 39, N'V?I', 1750, 8);
EXECUTE P_THEM_SP('SP9',N'BITIS HUNTER X 37', 'BITIS', 37, N'V?I', 1300, 12);
EXECUTE P_THEM_SP('SP10',N'ADIDAS NDM R1 37', 'ADIDAS', 37, N'DA', 2700, 3);
---HOADON
select * from system.hoadon;
EXECUTE P_THEM_HD('NVA', '10/09/2023');
EXECUTE P_THEM_HD('NVB', '11/09/2023');
EXECUTE P_THEM_HD('NVC', '12/09/2023');
EXECUTE P_THEM_HD('NVE', '10/11/2023');
---CTHD
select * from system.cthd;
execute P_THEM_CTHD(1,'SP1',1);
execute P_THEM_CTHD(1,'SP2',1);
execute P_THEM_CTHD(2,'SP5',1);
execute P_THEM_CTHD(3,'SP6',1);
execute P_THEM_CTHD(4,'SP3',1);
---USER
EXECUTE P_THEM_KH('NVA01', 'NGUYEN VAN A', 'QUAN 12', '0909001002');
EXECUTE P_TAO_USER_KH('NVA01','ABC',3);
SELECT * FROM DBA_USERS where username='NVE';
EXECUTE P_XOA_KH('NVA01');
EXECUTE P_XOA_USER('NVA01');
---tao user nhan vien
EXECUTE P_TAO_USER_NV('NV01','NV01',3);
---======================================================================================
---DESC DBA_USERS
---select * from dba_roles
---select f_ma_hoa_mk('NVA',3) from dual;
---ALTER SESSION SET NLS_DATE_FORMAT = 'DD/MM/YYYY';
/
create or replace procedure P_XEM_HD(cur_hd OUT sys_refcursor)
as
begin
    open cur_hd for
    SELECT * FROM SYSTEM.HOADON;
end;
/
---========================================================================================
---audit
---trigger
create table audit_log(
    aud_id number GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    aud_activity varchar2(255),
    aud_user varchar(255),
    aud_time varchar2(255)
)
---drop table audit_log;
/
create or replace trigger t_audit_logon
after logon on database
begin
    if USER!='SYS' then
        insert into system.audit_log(aud_activity, aud_user, aud_time)
        values('LOGON', USER,to_char(sysdate,'DD/MM/YYYY HH24:MI:SS'));
    end if;
end;
/
create or replace trigger t_audit_logoff
before logoff on database
begin  
    if USER!='SYS' then
        insert into system.audit_log(aud_activity, aud_user, aud_time)
        values('LOGOFF', USER,to_char(sysdate,'DD/MM/YYYY HH24:MI:SS'));    
    end if;
end;
/
create or replace procedure p_xem_audit_log(
    cur_log OUT sys_refcursor,
    act IN varchar2,
    userlog IN varchar2
)
as
begin
    if act='ALL' then
        open cur_log for
        select aud_activity, aud_user, aud_time from system.audit_log
        where aud_user like '%'||userlog||'%';
    else
        open cur_log for
        select aud_activity, aud_user, aud_time from system.audit_log
        where aud_activity=act and aud_user like '%'||userlog||'%';
    end if;
end;
/
select * from system.audit_log;
/
/*---standard
CREATE AUDIT POLICY audit_khachhang
ACTIONS INSERT ON system.khachhang,
        UPDATE ON system.khachhang,
        DELETE ON system.khachhang;
---audit policy audit_khachhang;
---noaudit policy audit_khachhang;
---drop audit policy audit_khachhang;
create audit policy audit_hoadon
actions INSERT ON system.hoadon,
        UPDATE ON system.hoadon,
        DELETE ON system.hoadon;
---audit policy audit_hoadon;
---noaudit policy audit_hoadon;
drop audit policy audit_hoadon;
select dbusername,to_char(event_timestamp,'DD/MM/YYYY HH24:MI:SS'), action_name,object_name
from sys.unified_audit_trail;
*/
---FGA
BEGIN
  DBMS_FGA.ADD_POLICY(
    object_schema   => 'system',
    object_name     => 'sanpham',
    policy_name     => 'audit_sanpham',    
    enable          => TRUE,
    statement_types => 'INSERT, UPDATE, DELETE'
  );
END;
/
BEGIN
  DBMS_FGA.ADD_POLICY(
    object_schema   => 'system',
    object_name     => 'khachhang',
    policy_name     => 'audit_khachhang',    
    enable          => TRUE,
    statement_types => 'INSERT, UPDATE, DELETE'
  );
END;
/
BEGIN
  DBMS_FGA.ADD_POLICY(
    object_schema   => 'system',
    object_name     => 'hoadon',
    policy_name     => 'audit_hoadon',    
    enable          => TRUE,
    statement_types => 'INSERT, UPDATE, DELETE'
  );
END;
/
BEGIN
  DBMS_FGA.ADD_POLICY(
    object_schema   => 'system',
    object_name     => 'cthd',
    policy_name     => 'audit_cthd',    
    enable          => TRUE,
    statement_types => 'INSERT, DELETE'
  );
END;
/
---select * from dba_audit_policies;
/
create or replace procedure p_xem_audit_table(
    cur_aud OUT sys_refcursor,
    in_table IN varchar2
)
as
begin
    open cur_aud for
    select username, to_char(timestamp,'DD/MM/YYYY HH24:MI:SS') as time, obj_name, action_name
    from sys.dba_audit_trail
    where obj_name=in_table;
end;
/

/*
---sys.aud$=sys.dba_audit_trail
---sys.fga_log$=sys.dba_fga_audit_trail
select * from sys.aud$;
select * from SYS.fga_log$;
select * from dba_common_audit_trail;
SELECT * FROM sys.dba_audit_trail;
select * from unified_audit_trail;
truncate table sys.unified_audit_trail;
grant select on dba_audit_trail to system
desc sys.dba_audit_trail;
truncate table sys.aud$;
truncate table sys.fga_log$;
select db_user, to_char(extended_timestamp,'DD/MM/YYYY HH24:MI:SS') as time, object_name, statement_type
from dba_common_audit_trail;
/

/
---ALTER SYSTEM SET AUDIT_TRAIL = NONE SCOPE=SPFILE;
---SELECT VALUE FROM V$OPTION WHERE PARAMETER = 'Unified Auditing';
*/
select * from dba_users where username='NQT'
/
